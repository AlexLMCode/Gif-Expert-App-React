{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","console","log","preventDefault","trim","length","prevState","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","image","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAuCeA,EApCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAqBrC,OACI,0BAAMC,SAdW,SAACC,GAClBC,QAAQC,IAAI,UACZF,EAAEG,iBAEEN,EAAWO,OAAOC,OAAS,IAE3BV,GAAc,SAAAW,GAAS,OAAKT,GAAL,mBAAmBS,OAE1CR,EAAc,OAOd,2BACIS,KAAK,OACLC,MAAOX,EACPY,SAtBc,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,Y,uBCUhBG,EAjBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACNC,EADM,gDACyCC,UAAUH,GADnD,+DAEYI,MAAMF,GAFlB,cAENG,EAFM,gBAGSA,EAAUC,OAHnB,uBAGLC,EAHK,EAGLA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAEzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV9B,kBAcLM,GAdK,4CAAH,sDCUEO,EATK,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACzB,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCiBDO,EAnBC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDJ,SAACA,GAAc,IAAD,EAEZhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KActC,OAPAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CAACf,KAAMkB,EAAML,SAAS,SAElD,CAACpB,IAEGqB,EDXyBK,CAAa1B,GAAhCa,EAFe,EAErBN,KAAca,EAFO,EAEPA,QAErB,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GAElDoB,GAAW,uBAAGJ,UAAU,oCAAb,cAEZ,yBAAKA,UAAU,0DAEPH,EAAOJ,KAAI,SAAAkB,GAAK,OAAI,kBAAC,EAAD,iBAAiBA,EAAjB,CAAwBC,IAAKD,EAAMhB,YEc5DkB,EAzBM,WAEjB,IAFuB,EAIa7C,mBAFf,CAAC,cAFC,mBAIhB8C,EAJgB,KAIJ/C,EAJI,KAWvB,OACI,oCACI,yCACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQ+C,EAAWrB,KAAI,SAAAT,GAAQ,OAAI,kBAAC,EAAD,CAASA,SAAUA,EAAU4B,IAAK5B,U,MCjBjF+B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e1d0eeaf.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        console.log('Submit');\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n\n            setCategories(prevState => [inputValue,...prevState ]);\n            //Aqui el setCategories puede recibir un callback que recibe el estado anterior y retorna todo el estado y lo nuevo que queremos agregar\n            setInputValue('');\n\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    );\n};\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;\n","\nconst getGifs = async (category) => {\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=P57JjpAyJblb0CFBgFvVlC7rRH9TGugQ&limit=10`\n    const respuesta = await fetch(url);\n    const {data} = await respuesta.json();\n\n    const gifs = data.map(img => {\n        //retornara un array con objetos dentro los cuales tienen la siguiente data:\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    //console.log(gifs);\n    return gifs;\n}\n\nexport default getGifs;\n","import React from 'react';\n\nconst GifGridItem = ({title, url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    );\n};\n\nexport default GifGridItem;\n","import React from 'react';\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\nimport GifGridItem from \"./GifGridItem\";\n\nconst GifGrid = ({category}) => {\n\n    const {data: images, loading} = useFetchGifs(category)\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__bounce\">{category}</h3>\n\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n\n            <div className=\"card-grid animate__animated animate__lightSpeedInRight\">\n                {\n                    images.map(image => <GifGridItem {...image} key={image.id}/>)\n                }\n            </div>\n        </>\n    );\n};\n\nexport default GifGrid;\n","import {useEffect, useState} from 'react';\nimport getGifs from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n\n        getGifs(category)\n            .then(imgs => setState({data: imgs, loading: false}))\n\n    }, [category])\n\n    return state; // {data: [], loading: true}\n}\n\n","//rsc\nimport React, {useState} from 'react';\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\n\nconst GifExpertApp = () => {\n\n    const initialState = ['Bad Bunny'];\n\n    const [categories, setCategories] = useState(initialState)\n    /*\n        const handleAdd = () => {\n            setCategories([...categories, 'HunterXHunter']);\n        };\n     */\n\n    return (\n        <>\n            <h2>GifExpert</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr/>\n            <ol>\n                {\n                    categories.map(category => <GifGrid category={category} key={category}/>)\n                }\n            </ol>\n        </>\n    );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from \"./GifExpertApp\";\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp/>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}